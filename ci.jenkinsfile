#!groovy

@Library('jenkinsfile@master') _

def build = new org.devops.build()
def deploy = new org.devops.deploy()
def tools = new org.devops.tools()

String BuildType = "${env.buildType}"
String BuildShell = "${env.buildShell}"
String deployHosts = "${env.deployHosts}"

String srcUrl = "${env.srcUrl}"
String branchName = "${env.branchName}"

pipeline{
    agent { node { label "master"}}
    
    stages{
        
          stage("CheckOut"){
             steps{
                script{
                    
                    if("${runOpts}" == "GitlabPush"){
                        branchName = branch - "refs/heads/"
                        
                        currentBuild.description = "Trigger by ${userName} ${ref}"
                    }
                    println("${branchName}")
                    
                    tools.PrintMes("获取代码","green")
                    checkout([$class: 'GitSCM', branches: [[name: "${branchName}"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '1d092af9-a2e2-4731-8d62-6f03057f6018', url: 'https://code.alstru.cn/gexiaohu/demo-maven-service.git']]])
                  }
              }
          }   

          stage("Build"){
              steps{
                script{
                      tools.PrintMes("执行打包","green")
                      build.Build(buildType,buildShell)
                    //deploy.SaltDeploy("${deployHosts}","test.ping")
                    //deploy.AnsibleDeploy("${deployHosts}","-m ping")
                  }
              }
         }
                  
    
    }
    
    post {
          always {
              script {
                println("always")
              }
          }

          success {
              script {
                println("success")
              }
          }
          success {
              script {
                println("success")
              }
          }
          success {
              script {
                println("success")
              }
          } 
     }

}
